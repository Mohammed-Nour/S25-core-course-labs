name: Moscow Current Time

on: 
    push:
        branches: [ "lab3" ]
    pull_request:
        branches: [ "master" ]


permissions:
    contents: read

jobs:
  security:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@master
        with:
          ref: lab3
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/python-3.10@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}


  build:
    name: Build & Test
    timeout-minutes: 10
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v4
        with:
          ref: lab3
      - name: Set up Python
        # This is the version of the action for setting up Python, not the Python version.
        uses: actions/setup-python@v5
        with:
          cache: 'pip'

          # Semantic version range syntax or exact version of a Python version
          python-version: '3.13.1'
          
          # Optional - x64 or x86 architecture, defaults to x64
          architecture: 'x64' 

      - name: Install dependencies
        working-directory: app_python
        run: |
            python -m pip install --upgrade pip
            pip install -r requirements.txt

      - name: Lint code with flake8 && pylint
        working-directory: app_python
        run: |
            flake8 tests app.py
            pylint tests app.py

      - name: Test with pytest
        working-directory: app_python
        run: pytest tests
  docker:
    runs-on: ubuntu-22.04
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      -
        name: Build and push normal image
        uses: docker/build-push-action@v6
        with:
          push: true
          context: "{{defaultContext}}:app_python"
          tags: ${{ vars.DOCKERHUB_USERNAME }}/app_python:app_python-prod-ci-1.0.0
          cache-from: type=gha,scope=container
          cache-to: type=gha,mode=max,scope=container
      -
        name: Build and push distroless image
        uses: docker/build-push-action@v6
        with:
          push: true
          context: "{{defaultContext}}:app_python"
          tags: ${{ vars.DOCKERHUB_USERNAME }}/app_python:app_python-distroless-prod-ci-1.0.0
          cache-from: type=gha,scope=container
          cache-to: type=gha,mode=max,scope=container
