version: "3.3"

networks:
  loki:

services:

  app_python:
    image: "oshaheen1882051/app_python:app_python-distroless-prod-ci-1.0.0"
    ports:
      - "5000:5000"
      - "5001:5001"
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "10"
        tag: "{{.ImageName}}|{{.Name}}"
    mem_limit: "512m"  # Limit memory to 512MB
    networks:
      - loki
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000"]
      interval: 30s
      timeout: 10s
      retries: 3



  

  app_go:
    image: "oshaheen1882051/app_go:app_go-distroless-prod-ci-1.0.0"
    ports:
      - "3500:3500"
    networks:
      - loki
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "10"
        tag: "{{.ImageName}}|{{.Name}}"
    mem_limit: "512m"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3500"]  # Loki's readiness endpoint
      interval: 30s
      timeout: 10s
      retries: 3

    

  loki:
    image: grafana/loki:latest
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - loki
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "10"
        tag: "{{.ImageName}}|{{.Name}}"
    mem_limit: "1g"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3100/ready"]
      interval: 30s
      timeout: 10s
      retries: 3
    

  promtail:
    image: grafana/promtail:latest
    volumes:
      - /var/log:/var/log
      - ./promtail.yml:/etc/promtail/config.yml
      - /var/lib/docker/containers:/var/lib/docker/containers
    command: -config.file=/etc/promtail/config.yml
    networks:
      - loki
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "10"
        tag: "{{.ImageName}}|{{.Name}}"
    mem_limit: "512m"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9080"]
      interval: 30s
      timeout: 10s
      retries: 3
    

  grafana:
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_FEATURE_TOGGLES_ENABLE=alertingSimplifiedRouting,alertingQueryAndExpressionsStepMode
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /etc/grafana/provisioning/datasources
        cat <<EOF > /etc/grafana/provisioning/datasources/ds.yaml
        apiVersion: 1
        datasources:
        - name: Loki
          type: loki
          access: proxy 
          orgId: 1
          url: http://loki:3100
          basicAuth: false
          isDefault: true
          version: 1
          editable: false
        EOF
        /run.sh
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    networks:
      - loki
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "10"
        tag: "{{.ImageName}}|{{.Name}}"
    mem_limit: "1g"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]  # Grafana's health endpoint
      interval: 30s
      timeout: 10s
      retries: 3


  prometheus:
    image: prom/prometheus:latest
    volumes:
      - "./prometheus.yml:/etc/prometheus/prometheus.yml"
    command: --config.file=/etc/prometheus/prometheus.yml
    networks:
      - loki
    ports:
      - 9090:9090
    mem_limit: "1g"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9090/targetss"]
      interval: 30s
      timeout: 10s
      retries: 3